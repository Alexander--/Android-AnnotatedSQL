<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.6"?>
<plugin>
	<extension
         point="org.eclipse.jdt.apt.core.annotationProcessorFactory">
         <java6processors enableDefault="true">
                <java6processor class="com.annotatedsql.processor.provider.ProviderProcessor"/>
                <java6processor class="com.annotatedsql.processor.sql.SQLProcessor"/>
         </java6processors>
	</extension>
	<extension point="org.eclipse.jdt.core.classpathContainerInitializer">
		<classpathContainerInitializer id="com.annotatedsql.LIBRARY" 
			class="com.annotatedsql.classlibrary.ClassPathInitializerImpl"/>
	</extension>
	<extension point="org.eclipse.jdt.ui.classpathContainerPage">
        <classpathContainerPage
            name="AnnotatedSQL Classpath Container"
            class="com.annotatedsql.classlibrary.ClassPathContainerPage"
            id="com.annotatedsql.LIBRARY">
        </classpathContainerPage>
    </extension>
    
 	<extension point="org.eclipse.ui.editors.templates">
	     <template
	           autoinsert="true"
	           contextTypeId="java"
	           
	           description="AnnotatedSQL @Table"
	           id="AnnotatedSQLProcessor.Table"
	           name="Table - AnnotatedSQL">
	        <pattern>
${:import(com.annotatedsql.annotation.sql.Table, com.annotatedsql.annotation.sql.Column, com.annotatedsql.annotation.sql.PrimaryKey, com.annotatedsql.annotation.provider.URI)}

@Table(${class_name}.TABLE_NAME)
public static interface ${class_name}{

	@URI
	String URI_CONTENT = "${table_path}";

	String TABLE_NAME = "${table_path}";
	
	@PrimaryKey
	@Column(type = Column.Type.INTEGER)
	String ID = "_id";
}
	        </pattern>
	     </template>

	     <template
	           autoinsert="true"
	           contextTypeId="java"
	           
	           description="AnnotatedSQL @SimpleView"
	           id="AnnotatedSQLProcessor.SimpleView"
	           name="SimpleView - AnnotatedSQL">
	        <pattern>

${:import(com.annotatedsql.annotation.sql.SimpleView, com.annotatedsql.annotation.sql.From, com.annotatedsql.annotation.sql.Join, com.annotatedsql.annotation.provider.URI)}
@SimpleView(${class_name}.VIEW_NAME)
public static interface ${class_name}{

	@URI(type=URI.Type.DIR, onlyQuery=true)
	String URI_CONTENT = "${view_path}";

	String VIEW_NAME = "${view_path}";
	
	@From(${from_table}.TABLE_NAME)
	String ${from_table_alias} = "${from_alias}";
	
	@Join(joinTable=${join_table}, joinColumn=${join_coumn}, onTable=${from_table_alias}, onColumn=${on_column})
	String ${join_table_alias} = "${join_alias}";	
}
	        </pattern>
	     </template>
	        
        <template
           autoinsert="true"
           contextTypeId="java"
           
           description="AnnotatedSQL @RawQuery"
           id="AnnotatedSQLProcessor.RawQuery"
           name="RawQuery - AnnotatedSQL">
	        <pattern>
${:import(com.annotatedsql.annotation.sql.RawQuery, com.annotatedsql.annotation.sql.SqlQuery, com.annotatedsql.annotation.provider.URI)}

@RawQuery(${class_name}QUERY_NAME)
public static interface ${class_name}{

	@URI(type=URI.Type.DIR, onlyQuery=true)
	String URI_CONTENT = "${query_path}";

	String QUERY_NAME = "${query_path}";
	
	@SqlQuery
	String QUERY = ""; 
}
	        </pattern>
	     </template>
	     
	     <template
           autoinsert="true"
           contextTypeId="java"
           
           description="AnnotatedSQL @Schema"
           id="AnnotatedSQLProcessor.Schema"
           name="Schema - AnnotatedSQL">
	        <pattern>
	        
${:import(com.annotatedsql.annotation.sql.Schema, com.annotatedsql.annotation.provider.Provider)}
	        
@Schema(className="${schema_class_name}", dbName="${db_name}", dbVersion=${db_version})
@Provider(name="${provider_class_name}", authority="${authority}", schemaClass="${schema_class_name}")
public interface ${store_class_name}{

}
	        </pattern>
	     </template>
	</extension>
	
</plugin>
